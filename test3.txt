[Mikroservisní architektura představuje __ servisně orientované architektury (SOA).] -> [evoluci]
[Pro jaký typ aplikací jsou virtuální stroje vhodnější?] -> [aplikace vyžadující všechny zdroje a funkcionality operačního systému]
[Která z následujících možností je charakteristická pro architekturu cloudu native?] -> [vendor lock-in]
[Znovupoužívání komponent zlepšuje __ vývoje softwaru a snižuje __ na vývoj.] -> [zlepšuje|||| produktivitu|||| náklady]
[Musí uživatel nutně vyčkat na zpracování asynchronní zprávy?] -> [Ne]
[Vrstvená softwarová architektura usnadňuje rozdělení zodpovědností a zjednodušuje vývoj a údržbu systému.] -> [zodpovědností|||| vývoj a údržbu systému]
[__ má hlavní odpovědnost za vývoj softwarové architektury.] -> [Software architekt]
[V prostředí servisně orientované architektury (SOA) se v případě chyby volají tzv. __.] -> [kompenzační služby]
[Jaký přínos přináší cloud computing v porovnání s řešením on-premise v oblasti investičních nákladů?] -> [bezpečnost]
[Je pravda, že dokumentové databáze patří mezi SQL databáze?] -> [Ne]
[Jaká synonyma známe pro vrstvu přístupu k datům?] -> [vrstva perzistence dat|||| perzistentní vrstva|||| datová vrstva]
[Software architekt má hlavní odpovědnost za vývoj softwarové architektury.] -> [Software architekt]
[Které z následujících aplikací jsou vhodné pro umělou inteligenci?] -> [předpověď selhání zařízení ve výrobních systémech|||| rozpoznávání obličejů pro kriminalistické vyšetřování|||| detekce podvodů v pojišťovnictví]
[SOA umožňuje realizovat informační systémy jako decentralizovaná řešení – systém je rozložený na jednotlivé __, které jsou mezi sebou v různé míře propojeny] -> [služby]
[V mikroservisní architektuře má každá mikroslužba své nezávislé úložiště dat.] -> [úložiště dat]
[Kontejnery jsou abstrakcí na aplikační úrovni, která zabaluje zdrojový kód a jeho závislosti dohromady.] -> [zdrojový kód]
[Mají zákazníci cloud computingu kontrolu nad fyzickým úložištěm dat?] -> [Ne]
[Které vlastnosti charakterizují klienta v třívrstvé architektuře?] -> [Je aktivní.|||| Komunikuje s malým množstvím serverů.]
[Které funkce patří mezi výhody modelu IaaS?] -> [rychlejší uvedení na trh|||| škálovatelnost|||| není nutná fyzická údržba serveru]
[V servisně orientované architektuře umožňuje registr služeb vyhledávání podle požadovaného rozhraní, což eliminuje potřebu předem znát umístění služby. Tento princip se nazývá "find-bind-__".] -> [invoke]
[Je SOA schopná nahrazovat stávající služby za běhu?] -> [Ano]
[V mikroservisní architektuře má každá mikroslužba své nezávislé __.] -> [úložiště dat]
[Jaký typ klienta je navržen převážně pro internetové nebo intranetové aplikace?] -> [tenký klient]
[Terminál je oproštěn od jakékoliv vlastní inteligence, slouží jen jako __.] -> [vstupně-výstupní zařízení]
[Přístup cloud agnostic omezuje možnost vytvoření vysoce dostupné architektury.] -> [Ne]
[Které z následujících tvrzení jsou pravdivá o softwarových komponentách?] -> [Komponenty mohou být testovány nezávisle.|||| Komponenty mohou být vyvíjeny nezávisle.|||| Využití komponent zvyšuje produktivitu při vývoji softwaru.]
[Co umožňuje hypervizor v kontextu virtuálních strojů?] -> [přeměnu fyzického hardwaru na více serverů]
[Je počítač, na kterém běží jeden či více virtuálních strojů, označován jako host machine?] -> [Ano]
[Cloud computing je přístup k poskytování __ na internetu.] -> [služeb|||| internetu]
[Za co je v modelu PaaS zodpovědný spotřebitel?] -> [data|||| aplikace|||| přístupová identita uživatele]
[Aplikační kontejnery sdílejí hostitelský __.] -> [operační systém]
[Výhodou __ je přenositelnost mezi cloudovými platformami.] -> [cloud agnostic]
[K čemu slouží registr služeb v servisně orientované architektuře?] -> [k vyhledávání služeb bez znalosti jejich umístění]
[Co může sdílet více instancí různých operačních systémů na hostitelském stroji?] -> [virtualizované hardwarové prostředky]
[Jaký je účel asynchronního zasílání zpráv v informačním systému?] -> [zpracování dlouhotrvajících procesů]
[Cloud computing je přístup k poskytování služeb na __.] -> [služeb|||| internetu]
[Které dvojice podle typického schématu rozdělení v třívrstvé architektuře patří k sobě?] -> [aplikační server|||| business logika|||| klient|||| uživatelské rozhraní|||| DB server|||| přístup k datům]
[Mikroslužby sdílejí data prostřednictvím rozhraní API.] -> [Ano]
[Je architektura cloud native vždy levnější než architektura cloud enabled?] -> [Ne]
[Jak se nazývá vlastnost, která umožňuje flexibilní poskytování a uvolňování výpočetních prostředků podle potřeby?] -> [Rapid elasticity]
[Je pro mikroservisní architekturu typické sdílení dat mezi mikroslužbami?] -> [Ano]
[Výhodou cloud agnostic je přenositelnost mezi cloudovými platformami.] -> [cloud agnostic]
[Uživatel může získat výsledek úlohy buď aktivním čekáním nebo sledováním odpovědí ve speciální frontě pro tento účel.] -> [aktivním]
[Asynchronní zasílání zpráv umožňuje efektivní rozložení práce i na více fyzických serverech.] -> [serverech]
[Co může být součástí terminálu?] -> [obrazovka|||| klávesnice|||| tiskárna]
[Které vlastnosti charakterizují tenkého klienta?] -> [Může mít omezený rozsah použitelnosti.|||| Často komunikuje s malým množstvím serverů.]
[Jaký je první krok při rozdělování komunikace uživatele a předávání instrukcí zbytku systému?] -> [zpracování vstupů]
[Které úlohy mohou být přiděleny serverům v současném vývoji na straně serverů?] -> [ukládání pouze holých dat|||| zpracování komplexních dotazů]
[Které výpočetní zdroje může cloud computing poskytnout?] -> [úložiště|||| servery|||| aplikace|||| sítě]
[Co znamenají uvedené pojmy třívrstvé architektury?] -> [tenký klient|||| Klient navržený pro internetové nebo intranetové aplikace, často využívající standardní webový prohlížeč.|||| tlustý klient|||| Klient, který implementuje vrstvu uživatelského rozhraní na straně klienta, s částmi obchodní logiky nainstalovanými na počítače uživatelů.|||| RIA (Rich Internet Application)|||| Přístup, který kombinuje prvky tenkého a tlustého klienta, využívající moderní technologie jako HTML5, nabízející uživatelsky přívětivé a graficky intuitivní rozhraní.]
[Která definice a zkratka cloudových služeb patří k sobě?] -> [IaaS|||| Forma cloud computingu, která poskytuje virtualizované výpočetní zdroje prostřednictvím internetu.|||| PaaS|||| Model cloudové služby, kdy poskytovatel cloudu poskytuje uživatelům prostředí a nástroje pro vývoj softwaru prostřednictvím internetu.|||| SaaS|||| Model distribuce softwaru, v němž poskytovatel cloudu provozuje aplikace a zpřístupňuje je koncovým uživatelům prostřednictvím internetu.|||| XaaS|||| Odráží to, jak spotřebitelé po celém světě přijímají metodu as-a-Service k poskytování téměř všeho.]
[Které služby poskytuje vrstva přístupu k datům?] -> [ukládání dat|||| zpětné načítání dat|||| provádění složitějších dotazů]
[Virtuální stroje využívají virtualizaci na úrovni __.] -> [hardware]
[Který popis a cloudová služba patří k sobě?] -> [Desktop as a Service (DaaS)|||| Služba, která poskytuje licencované virtuální desktopy koncovým uživatelům přes internet.|||| Database as a Service (DBaaS)|||| Služba, která umožňuje uživatelům pohodlně nastavovat, provozovat a škálovat databáze bez nutnosti se o ně starat z pohledu infrastruktury.|||| Containers as a Service (CaaS)|||| Služba, která umožňuje vývojářům softwaru a IT oddělením spouštět, škálovat a spravovat kontejnery pomocí virtualizace založené na kontejnerech.|||| Function as a Service (FaaS)|||| Cloudová služba, která umožňuje vývojářům implementovat a spouštět části kódu bez správy základní infrastruktury.]
[Asynchronní zasílání zpráv umožňuje efektivní rozložení práce i na více fyzických __.] -> [serverech]
[Je pravda, že relační databáze jsou v současnosti mnohem populárnější a ve většině případů jsou považovány za lepší řešení než databáze NoSQL?] -> [Ne]
[Zjednodušeně řečeno, model sdílené odpovědnosti v cloudu znamená, že poskytovatelé __ odpovědní za bezpečnost cloudu a zákazníci jsou odpovědní za zabezpečení dat, která do cloudu vkládají.] -> [jsou]
[Může klient preferovat službu na základě atributů, jako je rychlost výběru nebo doba odezvy?] -> [Ano]
[Kterou z následujících možností aplikační server neposkytuje?] -> [fyzická infrastruktura]
[Které funkce patří mezi výhody modelu SaaS?] -> [není potřeba nic aktualizovat nebo instalovat|||| škálovatelnost|||| přístup odkudkoli, na jakémkoli zařízení]
[Které charakteristiky platí pro tlustého klienta?] -> [využívá ve větší míře HW klientského počítače|||| nepotřebuje stálé spojení se serverem|||| sbírá vstupní data|||| zobrazuje výstup]
[Která z následujících tvrzení jsou platná o komponentách?] -> [Komponenty uživatelského rozhraní mohou být nasazeny ve webovém prohlížeči.|||| Uživatelské rozhraní komponent obvykle běží na klientovském zařízení.|||| Komponenty datové vrstvy běží na serveru.|||| Komponenty aplikační vrstvy jsou nasazeny na aplikačním serveru.]
[Který z následujících nedávných vývojů ovlivňuje softwarovou architekturu?] -> [cloud computing|||| IoT|||| artificial intelligence|||| mobile computing]
[Je klient v třívrstvé architektuře obvykle pasivní?] -> [Ne]
[Přístup __ usnadňuje migraci aplikací mezi různými cloudovými poskytovateli.] -> [cloud agnostic]
[Které z následujících modelů nasazení cloudu jsou součástí NIST standardu?] -> [Community cloud|||| Hybrid cloud|||| Public cloud|||| Private cloud]
[Může více kontejnerů sdílet jádro operačního systému na jednom stroji?] -> [Ano]
[Co je hlavním rozdílem mezi mikroservisní architekturou a tradiční SOA?] -> [nezávislost|||| velikost]
[Jak následují modely poskytování služeb shora dolů, počínaje tím, který má největší odpovědnost na straně spotřebitele, až po ten s nejmenší?] -> [Infrastructure as a Service (IaaS)|||| Platform as a Service (PaaS)|||| Software as a Service (SaaS)]
[Jaké typy komponent rozlišujeme ve vrstvách architektury?] -> [věcné|||| systémové|||| univerzální]
[Kterou ze služeb webový server neposkytuje?] -> [optimalizace webového prohlížeče]
[Můžeme říci, že architektura cloud enabled se implementuje rychleji než cloud native?] -> [Ne]
[Které z možností jsou výhodami tenkého klienta?] -> [menší nároky na HW|||| bezpečnost|||| snadná údržba]
[Je pravda, že v modelu Software as a Service (SaaS) je spotřebitel odpovědný pouze za data a přístupovou identitu uživatele?] -> [Ano]
[Uživatel může získat výsledek úlohy buď __ čekáním nebo sledováním odpovědí ve speciální frontě pro tento účel.] -> [aktivním]
[Vrstvená softwarová architektura usnadňuje rozdělení zodpovědností a zjednodušuje __.] -> [zodpovědností|||| vývoj a údržbu systému]
[Musí být v průběhu transakce systém v plně konzistentním stavu?] -> [Ne]
[Myšlenka existence registru služeb naproti tomu umožňuje mít jedno centrální místo, které poskytuje možnost vyhledávání služeb bez nutnosti znát předem jejich umístění.] -> [Ano]
[Co znamená atomicita v transakčním zpracování?] -> [Zajištění, že buď všechny operace transakce proběhnou úspěšně, nebo žádná.]
[Každá mikroslužba úzce zaměřuje pouze na svoji __.] -> [funkčnost]
[Vrstvená softwarová architektura usnadňuje rozdělení __ a zjednodušuje __.] -> [zodpovědností|||| vývoj a údržbu systému]
[Cloud computing je přístup k poskytování __ na __.] -> [služeb|||| internetu]
[Jaké jsou hlavní výhody používání kontejnerů v IT infrastruktuře?] -> [zrychlení uvedení aplikací do provozu|||| snížení počtu zdrojů pro správu IT]
[Které z následujících požadavků jsou relevantní pro návrh softwarové architektury?] -> [požadavky na dostupnost|||| požadavky na výkon|||| požadavky na bezpečnost|||| požadavky na dobu odezvy|||| požadavky na škálovatelnost]
[Znovupoužívání komponent __ produktivitu vývoje softwaru a snižuje __ na vývoj.] -> [zlepšuje|||| produktivitu|||| náklady]
[Softwarová architektura má obvykle __ vrstvy, které komunikují prostřednictvím __.] -> [tři|||| APIs]
[Jak se sdílela data v raných prostředích PC?] -> [pomocí souborového serveru]
[Jaký typ izolace operačního systému pro jednotlivé aplikace poskytují virtuální počítače?] -> [úplný]
[Softwarová architektura má obvykle __ vrstvy, které komunikují prostřednictvím APIs.] -> [tři|||| APIs]
[Aplikační server provádí __ logiku aplikace.] -> [business]
[Která tvrzení o komunikaci mezi vrstvami architektury jsou pravdivá?] -> [Komunikace probíhá shora dolů bez přeskočení vrstev.]
[V čem spočívá hlavní výhoda kontejnerů v porovnání s virtuálními stroji?] -> [rychlejší spuštění a menší spotřeba paměti]
[Zjednodušeně řečeno, model sdílené odpovědnosti v cloudu znamená, že poskytovatelé jsou odpovědní za bezpečnost cloudu a zákazníci jsou odpovědní za zabezpečení dat, která do cloudu vkládají.] -> [jsou]
[Je možné přesunout službu na jiný server bez rekonfigurace všech dotčených systémů?] -> [Ano]
[Zajišťuje transakční zpracování trvalost i v extrémních případech, jako je výpadek napájení?] -> [Ano]
[Jak následuje komunikace podle typického schématu rozdělení v třívrstvé architektuře shora dolů?] -> [klient|||| webový server|||| aplikační server|||| DB server]
[Který z následujících tvrzení nejvíce popisuje úkol vrstvy uživatelského rozhraní?] -> [komunikace s uživatelem a předání jeho pokynů do zbytku systému]
[Co umožňuje mikroslužbám jednodušší škálovatelnost?] -> [nezávislost]
[Je pravda, že webový server může kromě zajištění komunikace mezi klientem a aplikačním serverem provádět také služby, jako je autentizace a zabezpečení komunikace?] -> [Ano]
[Které funkce patří mezi výhody modelu PaaS?] -> [Cena|||| Jednotné prostředí|||| Rychlejší uvedení na trh]
[Co může být výzvou při migraci aplikací z architektury cloud enabled na cloud agnostic?] -> [potřeba přepsání kódu kvůli odlišným API]
[Docker začal jako projekt za účelem postavení __ LXC kontejnerů.] -> [single-application]
[Transakční monitor sleduje změny, které programy provádějí, pomocí transakčního __.] -> [záznamu]
[Docker začal jako projekt za účelem postavení single-application LXC kontejnerů.] -> [single-application]
[Je znovupoužitelnost jednou z výhod SOA?] -> [Ano]
[Cloud computing je přístup k poskytování služeb na internetu.] -> [služeb|||| internetu]
[Co usnadňuje škálovatelnost v architektuře mikroslužeb oproti tradiční SOA?] -> [decentralizovaná škálovatelnost]
[Které charakteristiky platí pro tenkého klienta?] -> [vykonává aplikační logiku na straně serveru|||| sbírá vstupní data|||| zobrazuje výstup]
[Která vlastnost cloud computingu umožňuje přístup k zdrojům prostřednictvím různých zařízení?] -> [Broad network access]
[Znovupoužívání komponent __ __ vývoje softwaru a snižuje __ na vývoj.] -> [zlepšuje|||| produktivitu|||| náklady]
[Které z následujících možností je výhodou architektury SOA?] -> [snadnější řiditelnost při změnách]
[Které z následujících lze považovat za výhody softwarové architektury?] -> [konzistence uživatelských rozhraní|||| znovupoužitelnost komponent a služeb|||| snížení technologických rizik]
[Který z následujících nedostatků je spojen s fyzickým uložením dat v jiné zemi v rámci cloud computingu?] -> [bezpečnost přenášených dat]
[Která možnost byla považována za nejideálnější pro údržbu a správu systémů?] -> [centrální servery]
[Je bootování virtuálních strojů rychlejší než bootování kontejnerů?] -> [Ne]
[Jaká vlastnost transakčního zpracování zajišťuje, že v průběhu jedné transakce nemají ostatní transakce přístup ke stavu jejích dat?] -> [izolace]
[Vrstvená architektura umožňuje oddělení komponent a usnadňuje údržbu systému.] -> [Vrstvená|||| komponent|||| údržbu]
[Je pravda, že tenký klient má omezený rozsah použitelnosti v tom smyslu, že jej nemůžeme používat na různých typech počítačů a zařízení?] -> [Ne]
[Co představuje hlavní funkci vrstvy business logiky?] -> [implementuje kód aplikace]
[__ architektura umožňuje oddělení __ a usnadňuje __ systému.] -> [Vrstvená|||| komponent|||| údržbu]
[Je pravda, že pojem database management system v praxi označuje databázový server?] -> [Ano]
[V čem spočívá hlavní cíl mikroservisní architektury?] -> [rozdělení odpovědnosti a znovupoužitelnost jednotlivých služeb]
[Hypervizor ovládá běh virtuálních strojů poskytováním běhového prostředí pro __ machines.] -> [guest]
[Kdo zajišťuje a spravuje výpočetní infrastrukturu potřebnou pro poskytování cloudových služeb?] -> [cloud provider]
[Je kontejner vhodnější volbou, když chcete maximalizovat počet aplikací běžících na co nejmenším množství serverů?] -> [Ano]
[Mikroservisní architektura představuje evoluci servisně orientované architektury (SOA).] -> [evoluci]
[Je možné výsledek asynchronní zpracování získat pomocí aktivního čekání?] -> [Ano]
[Je pravda, že k prezentační vrstvě může přistupovat více klientů současně?] -> [Ano]
[Mikroservisní architektura je vhodná pro __ aplikace.] -> [větší]
[Vrstvená softwarová architektura usnadňuje rozdělení __ a zjednodušuje vývoj a údržbu systému.] -> [zodpovědností|||| vývoj a údržbu systému]
[Aplikační server provádí business logiku aplikace.] -> [business]
[Kdo je odpovědný za bezpečnost cloudu podle modelu sdílené odpovědnosti?] -> [poskytovatel]
[Terminál je oproštěn od jakékoliv vlastní inteligence, slouží jen jako vstupně-výstupní zařízení.] -> [vstupně-výstupní zařízení]
[Zjednodušeně řečeno, model sdílené odpovědnosti v cloudu znamená, že poskytovatelé jsou odpovědní za bezpečnost cloudu a zákazníci __ odpovědní za zabezpečení dat, která do cloudu vkládají.] -> [jsou]
[Jakou úroveň virtualizace poskytují kontejnery?] -> [virtualizaci na úrovni operačního systému]
[Znovupoužívání komponent zlepšuje __ vývoje softwaru a snižuje náklady na vývoj.] -> [zlepšuje|||| produktivitu|||| náklady]
[Představuje decentralizované řešení SOA větší nároky na bezpečnost komunikace mezi jednotlivými službami?] -> [Ano]
[Která vlastnost cloud computingu umožňuje automaticky měnit parametry služby dle aktuálních potřeb?] -> [dynamická škálovatelnost]
